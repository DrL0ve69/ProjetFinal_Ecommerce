@model PaginatedList<ProjetFinal_Ecommerce.Models.Produit>

@{
    ViewData["Title"] = "Index";

    // Conserver les paramètres de filtres ou de recherche
    var filtrePrix = ViewBag.FiltrePrix ?? "";
    var filtreMarque = ViewBag.FiltreMarque ?? "";
    var filtreCategorie = ViewBag.FiltreCategorie ?? "";
    var search = ViewBag.Search ?? "";

    var id = ViewBag.FiltrePrix ?? ViewBag.FiltreMarque ?? ViewBag.FiltreCategorie ?? "";
    // Conserver l'action
    var action = "Index";

    if (filtrePrix != "") action = "FiltrePrix";
    else if (filtreMarque != "") action = "FiltreMarque";
    else if (filtreCategorie != "") action = "FiltreCategorie";
    else if (search != "") action = "SearchNom";

    var p = new Produit();
}

<h1>Index, liste des produits</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>

<h2>Recherche par nom:</h2>

<form asp-controller="Produits" asp-action="SearchNom" method="get">
    <input type="text" name="rechercheNom" value="" />
    <button class="btn btn-primary" type="submit">Soumettre</button>
</form>

<h2>Recherche par:</h2>
<div class="row justify-content-end">
    <div class="col-3">
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Nos marques
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-action="FiltreMarque" asp-route-rechercheId="Nintendo">Nintendo</a></li>
                <li><a class="dropdown-item" asp-action="FiltreMarque" asp-route-rechercheId="Nike">Nike</a></li>
                <li><a class="dropdown-item" asp-action="FiltreMarque" asp-route-rechercheId="Adidas">Adidas</a></li>
                <li><a class="dropdown-item" asp-action="FiltreMarque" asp-route-rechercheId="Samsung">Samsung</a></li>
            </ul>
        </div>
    </div>
    <div class="col-3">
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Nos catégories
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-action="FiltreCategorie" asp-route-rechercheId="Jeux Vidéo">Jeux vidéo</a></li>
                <li><a class="dropdown-item" asp-action="FiltreCategorie" asp-route-rechercheId="Cuisine">Cuisine</a></li>
                <li><a class="dropdown-item" asp-action="FiltreCategorie" asp-route-rechercheId="Électronique">Électronique</a></li>
                <li><a class="dropdown-item" asp-action="FiltreCategorie" asp-route-rechercheId="Informatique">Informatique</a></li>
            </ul>
        </div>
    </div>
    <div class="col-3">
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Nos Prix
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-action="FiltrePrix" asp-route-rechercheId="Élevé">Élevé</a></li>
                <li><a class="dropdown-item" asp-action="FiltrePrix" asp-route-rechercheId="Moyen">Moyen</a></li>
                <li><a class="dropdown-item" asp-action="FiltrePrix" asp-route-rechercheId="Bas">Bas</a></li>
            </ul>
        </div>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(_ => p.Nom)
            </th>
            <th>
                @Html.DisplayNameFor(_ => p.Marque)
            </th>
            <th>
                @Html.DisplayNameFor(_ => p.Categorie)
            </th>
            <th>
                @Html.DisplayNameFor(_ => p.PrixUnitaire)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Marque)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categorie)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.PrixUnitaire)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    // Gérer la pagination, avec des boutons << < > >>
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action=@action
   asp-route-rechercheId=@id
   asp-route-rechercheNom=@ViewBag.Search
   asp-route-pageNumber="@(1)"
   class="btn btn-secondary @prevDisabled">
    &lt;&lt;
</a> |
<a asp-action=@action
   asp-route-rechercheId=@id
   asp-route-rechercheNom=@ViewBag.Search
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-secondary @prevDisabled">
    &lt;
</a> |
<a asp-action=@action
   asp-route-rechercheId=@id
   asp-route-rechercheNom=@ViewBag.Search
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-secondary @nextDisabled">
    &gt;
</a> |
<a asp-action=@action
   asp-route-rechercheId=@id
   asp-route-rechercheNom=@ViewBag.Search
   asp-route-pageNumber="@(Model.TotalPages)"
   class="btn btn-secondary @nextDisabled">
    &gt;&gt;
</a>

<div>
    <p>
        @ViewBag.Compteur
    </p>
</div>
